PASS <password>\r\n
USER <ident> <hostname> <modes> :<realname>
NICK <nickname>
QUIT :<message>


> PING unix time <text>
< PONG <text>

PRIVMSG <channel/user> :<message>
NOTICE <channel/user> :<message>

JOIN <channel> :<password>
PART <channel> :<message>

LIST

Primero que entra al canal es operador

Solo un operador puede...
TOPIC <channel> :<topic>
KICK <channel> <user> :<message>
//INVITE <user> <channel>



[:<prefix> ]<command> [<param>...] :<text>

struct message {
  std::string _command;
  std::vector<std::string> params;
  std::string _text;
  
  message(IRC_User* senderUser, const std::string& data)
    : _senderUser(senderUser)
  {
    
  }

  setCommand()

  size_t size() {
    return this._params.size();
  }

  void sendReply();
     senderUser.send(this);

private:
  IRC_User* _senderUser;
}


